name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            binary_name: syze-linux
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: syze-macos
            should_sign: true
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: syze-macos-aarch64
            should_sign: true
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Rename binary
        run: mv target/${{ matrix.target }}/release/syze target/${{ matrix.target }}/release/${{ matrix.binary_name }}
      - name: Sign MacOS binary
        if: matrix.should_sign
        run: |
          openssl req -new -newkey rsa:2048 -days 365 -nodes -x509 -keyout key.pem -out certificate.pem -subj "/C=US/ST=SomeState/L=SomeCity/O=SomeOrganization/OU=SomeOrganizationalUnit/CN=somecommonname"
          security create-keychain -p actions build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p actions build.keychain
          security import certificate.pem -k build.keychain -T /usr/bin/codesign -P ""
          security import key.pem -k build.keychain -P "" -T /usr/bin/codesign -A
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k actions build.keychain
          CERT_ID=$(security find-identity -v | grep "Self Signed" | awk '{print $2}')
          echo $CERT_ID
          codesign --keychain build.keychain --sign $CERT_ID target/${{ matrix.target }}/release/${{ matrix.binary_name }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.binary_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.binary_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: syze-linux
          path: release/
      - uses: actions/download-artifact@v2
        with:
          name: syze-macos
          path: release/
      - uses: actions/download-artifact@v2
        with:
          name: syze-macos-aarch64
          path: release/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: List contents of release directory
        run: ls -R release
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Upload Linux Release Asset
        id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/syze-linux
          asset_name: syze-${{ steps.get_version.outputs.VERSION }}-x86_64-linux
          asset_content_type: application/octet-stream
      - name: Upload macOS x86 Release Asset
        id: upload-macos-x86-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/syze-macos
          asset_name: syze-${{ steps.get_version.outputs.VERSION }}-x86_64-macos
          asset_content_type: application/octet-stream
      - name: Upload macOS ARM Release Asset
        id: upload-macos-arm-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/syze-macos-aarch64
          asset_name: syze-${{ steps.get_version.outputs.VERSION }}-aarch64-macos
          asset_content_type: application/octet-stream
