name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            runs-on: ubuntu-latest
          - target: aarch64-apple-darwin
            runs-on: macos-latest
            os:
              name: openbsd
              architecture: arm64
              version: "7.3"
              host: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Cross Platform Build
        uses: cross-platform-actions/action@v0.13.0
        with:
          operating_system: ${{ matrix.os.name }}
          architecture: ${{ matrix.os.architecture }}
          version: ${{ matrix.os.version }}
          shell: bash
          memory: 5G
          cpu_count: 4
          run: |
            cargo build --release --target ${{ matrix.target }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Download Linux Artifact
        uses: actions/download-artifact@v2
        with:
          name: x86_64-unknown-linux-musl
          path: release/linux/
      - name: Download macOS Artifact
        uses: actions/download-artifact@v2
        with:
          name: aarch64-apple-darwin
          path: release/macos/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/linux/syze
          asset_name: syze-${{ steps.get_version.outputs.VERSION }}-x86_64-linux
          asset_content_type: application/octet-stream
      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/macos/syze
          asset_name: syze-${{ steps.get_version.outputs.VERSION }}-aarch64-apple-darwin
          asset_content_type: application/octet-stream
